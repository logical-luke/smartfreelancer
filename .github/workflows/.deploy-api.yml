name: Deploy to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker environment
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t docker.pkg.github.com/${{ github.repository }}:${{ github.sha }} -f Dockerfile.api .
          docker push docker.pkg.github.com/${{ github.repository }}:${{ github.sha }}

      - name: SSH into VPS and deploy container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP_ADDRESS }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker pull docker.pkg.github.com/${{ github.repository }}:${{ github.sha }}
            docker stop smartfreelancer-${{ github.sha }} || true
            docker rm smartfreelancer-${{ github.sha }} || true
            docker run -d --name smartfreelancer-${{ github.sha }} \
              -e DATABASE_HOST=$DATABASE_HOST \
              -e DATABASE_PORT=$DATABASE_PORT \
              -e RABBITMQ_HOST=$RABBITMQ_HOST \
              -p $(shuf -i 12000-12999 -n 1):80 \
              smartfreelancer:${{ github.sha }}
            port=$(docker inspect -f '{{range $p, $conf := .NetworkSettings.Ports}} {{$p}} -> {{(index $conf 0).HostPort}} {{end}}' smartfreelancer-${{ github.sha }} | grep ' 80/tcp' | awk '{print $3}')
            python3 -c "import fileinput, re; [print(re.sub(r'proxy_pass http://localhost:\d+;', f'proxy_pass http://localhost:{port};', line.rstrip())) if 'proxy_pass http://localhost:' in line else print(line.rstrip()) for line in fileinput.input('/etc/nginx/sites-available/default', inplace=True)]"
            nginx -s reload
            docker stop $(docker ps -q --filter "name=smartfreelancer" --filter "not name=smartfreelancer-${{ github.sha }}")
            docker rm $(docker ps -aq --filter "name=smartfreelancer" --filter "not name=smartfreelancer-${{ github.sha }}")
